"""
Django settings for project_django project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
# from decouple import config
import dj_database_url
from pathlib import Path

import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

PRODUCTION = os.getenv('DATABASE_PUBLIC_URL') is not None

env = environ.Env()
# read .env file from project root
env.read_env(os.path.join(BASE_DIR, '.env'))

# add to enable push to csv in public repo for map updates
GITHUB_TOKEN  = env('GITHUB_TOKEN')
GITHUB_REPO   = env('GITHUB_REPO')
GITHUB_BRANCH = env('GITHUB_BRANCH', default='master')
CSV_PATH      = env('CSV_PATH', default='data.csv')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3@5wx%(^*zl68l(o$^m-3%cvjv0g&mom1ra=oj5f048_al57s7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = not PRODUCTION

# ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'siap-be-production.up.railway.app', 'considerate-trust-production.up.railway.app']

ALLOWED_HOSTS = ['localhost', '127.0.0.1']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'example_app',
    'accounts',
    'rest_framework.authtoken',
    'klien',
    # 'survei',
    'survei.apps.SurveiConfig',
    'tracker_survei',
    'buatAkun',
    'daftarAkun',
    'dokumen_pendukung',
    'souvenir',
    'dashboard',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
]
CORS_ALLOW_CREDENTIALS = True

# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:3000",  # Next.js frontend
# ]

CSRF_COOKIE_SECURE = False  # For development (in production, this should be True with HTTPS)
CSRF_COOKIE_HTTPONLY = False
CSRF_USE_SESSIONS = False

MEDIA_URL = 'api/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


ROOT_URLCONF = 'project_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project_django.wsgi.application'

# PRODUCTION = "postgresql://postgres:STunTjGwaafzzvGqJIdgShEUBuOvdqCQ@junction.proxy.rlwy.net:15737/railway"

PRODUCTION = False


if PRODUCTION:
    DATABASES = {
        'default': dj_database_url.config(
            default=os.getenv("DATABASE_PUBLIC_URL"),
            conn_max_age=600,
            ssl_require=True
        )
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'siap', 
            'USER': 'postgres',
            'PASSWORD': 'secret99',
            'HOST': 'db', 
            'PORT': '5432',

        }
    }


AUTH_USER_MODEL = 'accounts.User'

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Authentication Backends
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

# EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
# EMAIL_FILE_PATH = r'C:\Users\honeyn\app-messages'  # Or any directory you prefer



CSRF_TRUSTED_ORIGINS = ['http://localhost:3000', "https://siap-fe-production.up.railway.app",]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Jakarta'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = BASE_DIR / 'staticfiles'

STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Allow requests from the Next.js frontend
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # Frontend URL
    "https://siap-fe-production.up.railway.app"
]

CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',  # Use TokenAuthentication
    ],
}
